turn_off_all_lights:
  alias: Turn Off All Lights
  sequence:
  - service: light.turn_off
    data:
      entity_id: all
  mode: single
turn_off_lights_common_areas:
  alias: Turn Off Lights Common Areas
  sequence:
  - service: light.turn_off
    data:
      transition: 10
    target:
      entity_id:
      - light.lamps_livingroom
      - light.lamp_frontroom
      - light.bookshelf
      - light.laundry
  mode: single
energy_saver:
  alias: Energy Saver
  sequence:
  - service: "{% if command == \"enable\" %} \n  switch.turn_off \n{% elif command
      == \"disable\" %}\n  switch.turn_on\n{% endif %}"
    data: {}
    target:
      entity_id: "{% if mode == \"vacant\" %}\n  switch.energy_vacant\n{% elif mode
        == \"overnight\" %}\n  switch.energy_overnight\n{% endif %}"
  - if:
    - condition: template
      value_template: '{{ not is_state(''sensor.dishwasher'', ''Running'') and command
        == ''enable'' }}'
    then:
    - service: switch.turn_off
      target:
        entity_id: switch.plug_dishwasher
      data: {}
  - if:
    - condition: template
      value_template: '{{ not is_state(''sensor.washing_machine'', ''Running'') and
        command == ''enable'' }}'
    then:
    - service: switch.turn_off
      target:
        entity_id: switch.plug_washingmachine
      data: {}
  - if:
    - condition: template
      value_template: '{{ is_state(''binary_sensor.tv_sofia'', ''off'') and command
        == ''enable'' }}'
    then:
    - service: switch.turn_off
      target:
        entity_id: switch.plug_sofia
      data: {}
  - if:
    - condition: template
      value_template: '{{ command == ''disable'' }}'
    then:
    - service: switch.turn_on
      target:
        entity_id:
        - switch.plug_dishwasher
        - switch.plug_washingmachine
        - switch.plug_sofia
      data: {}
  - delay: 00:00:15
  - service: shell_command.sleep_displays
    data: {}
  mode: single
disable_cast_chime:
  alias: Disable Cast Chime
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ states(target_entity) == ''off'' }}'
      sequence:
      - service: media_player.volume_set
        data_template:
          entity_id: '{{ target_entity }}'
          volume_level: 0
      - service: media_player.turn_on
        target:
          entity_id: '{{ target_entity }}'
      - wait_template: '{{ states(target_entity) == ''idle'' }}'
    - conditions:
      - condition: template
        value_template: '{{ states(target_entity) == ''idle'' }}'
      sequence: []
    default: []
  mode: single
